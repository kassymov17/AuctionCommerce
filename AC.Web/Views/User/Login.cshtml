@model LoginModel
@using AC.Web.Models.User;

@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    var registerUrl = Url.RouteUrl("Register");
}

<div class="page login-page">
    <div class="page-title">
        <h1>@T("Account.Login.Welcome")</h1>
    </div>
    <div class="page-body">
        <div class="customer-blocks">
            <div class="new-wrapper register-block">
                <div class="title">
                    <strong>@T("Account.Login.NewCustomer")</strong>
                </div>
                <div class="text">
                    @T("Account.Login.NewCustomerText")
                </div>
                <div class="buttons">
                    <input type="button" class="button-1 register-button" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                </div>
            </div>
            <div class="returning-wrapper fieldset">
                @using (Html.BeginForm())
                {
                    var validationSummary = Html.ValidationSummary(true, T("Account.Login.Unsuccessful").Text);
                    <div class="title">
                        <strong>@T("Account.Login.ReturningCustomer")</strong>
                    </div>
                    if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                    {
                        <div class="message-error">@validationSummary</div>
                    }
                    <div class="form-fields">
                        <div class="inputs">
                            @Html.LabelFor(m => m.Email, new { }, ":")
                            @Html.TextBoxFor(m => m.Email, new { @class = "email", autofocus = "autofocus" })
                            @Html.ValidationMessageFor(m => m.Email)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(m => m.Password, new { }, ":")
                            @Html.PasswordFor(m => m.Password, new { @class = "password" })
                            @Html.ValidationMessageFor(m => m.Password)
                        </div>
                    </div>

                    <div class="buttons">
                        <input class="button-1 login-button" type="submit" value="@T("Account.Login.LoginButton")" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>