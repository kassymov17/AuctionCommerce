@model AC.Web.Models.Catalog.ItemListModel

@using AC.Core.Domain.Catalog

@{
    var defaultGridPageSize = 15;
    var gridPageSizes = "10, 15, 20, 50, 100";

    ViewBag.Title = "Список товаров на которые были сделаны ставки";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            Товары на которые вы делали ставки
        </h1>
    </div>
    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.ACLabelFor(model => model.SearchItemName)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.ACEditorFor(model => model.SearchItemName)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-7 col-md-offset-5">
                                <button type="button" id="search-items" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i>
                                    Поиск
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="items-grid"></div>
                        <script>
                            $(document).ready(function() {
                                $("#items-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("ItemBidList", "Item"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: additionalData
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors"
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // отменить изменения
                                            this.cancelChanges();
                                        },
                                        pageSize: @(defaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(gridPageSizes)]
                                    },
                                    editable: {
                                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                        mode: "inline"
                                    },
                                    scrollable: false,
                                    dataBound: onDataBound,
                                    columns: [
                                        {
                                            field: "Id",
                                            headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                            headerAttributes: { style: "text-align: center" },
                                            attributes: { style: "text-align: center" },
                                            template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/>",
                                            width: 50
                                        },
                                        {
                                            field: "PictureThumbnailUrl",
                                            title: "Изображение",
                                            template: '<img src="#=PictureThumbnailUrl#" />',
                                            width: 100
                                        },
                                        {
                                            field: "Name",
                                            title: "Название",
                                            width: 300
                                        },
                                        {
                                            field: "InitialPrice",
                                            title: "Цена",
                                            width: 150
                                        },
                                        {
                                            field: "ItemTypeName",
                                            title: "Тип товара",
                                            width: 100
                                        },
                                        {
                                            field: "Id",
                                            title: "Редактировать",
                                            width: 100,
                                            template: '<a href="@Url.Action("ItemDetails", "Item")?itemId=#=Id#">Перейти</a>'
                                        }
                                    ]
                                });
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        var selectedIds = [];

        $(document).ready(function() {
            $('#search-items').click(function() {
                // поиск
                var grid = $('#items-grid').data('kendoGrid');
                grid.dataSource.page(1);

                $('.checkboxGroups').attr('checked', false).change();
                selectedIds = [];
                return false;
            });

            $("#@Html.FieldIdFor(model => model.SearchItemName)").keydown(function(event) {
                if (event.keyCode === 13) {
                    $("#search-items").click();
                    return false;
                }
            });

            // удалить выбранные
            $('#delete-selected').click(function(e) {
                e.preventDefault();

                var postData = {
                    selectedIds: selectedIds
                };
                addAntiForgeryToken(postData);

                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("DeleteSelected", "Item"))",
                    data: postData,
                    complete: function(data) {
                        // обновить таблицу
                        var grid = $('#items-grid').data('kendoGrid');
                        grid.dataSource.read();
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(thrownError);
                    },
                    traditional: true
                });
                return false;
            });

            $('#mastercheckbox').click(function() {
                $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
            });

            $('#items-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function(e) {
                var $check = $(this);
                if ($check.is(":checked") == true) {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked == -1) {
                        selectedIds.push($check.val());
                    }
                } else {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked > -1) {
                        selectedIds = $.grep(selectedIds, function(item, index) {
                            return item != $check.val();
                        });
                    }
                }
                updateMasterCheckbox();
            });
        });

        function additionalData() {
            var data = {
                SearchItemName: $('#@Html.FieldIdFor(model => model.SearchItemName)').val(),
                //SearchCategoryId: $('#SearchCategoryId').val(),
                //SearchItemTypeId: $('#SearchItemTypeId').val()
            };
            addAntiForgeryToken(data);
            return data;
        }

        function onDataBound(e) {
            $('#items-grid input[type=checkbox][id!=mastercheckbox]').each(function() {
                var currentId = $(this).val();
                var checked = jQuery.inArray(currentId, selectedIds);
                //set checked based on if current checkbox's value is in selectedIds.
                $(this).attr('checked', checked > -1);
            });

            updateMasterCheckbox();
        }

        function updateMasterCheckbox() {
            var numChkBoxes = $('#products-grid input[type=checkbox][id!=mastercheckbox]').length;
            var numChkBoxesChecked = $('#products-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
            $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
        }

    </script>
}